//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18063
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;

using System.Collections.Generic;
using com.cosmichorizons.enums;
using com.cosmichorizons.basecomponents;
using com.cosmichorizons.interfaces;
public class SurroundingBoardComponentMovesClass: LegalMoves
{
	//	public enum LevelOneLegalMoves
	//	{
	//		MOVE_ONE = 1,
	//		MOVE_TWO = 10,
	//		MOVE_THREE = 8,
	//		MOVE_FOUR = 9,
	//		MOVE_FIVE = -1,
	//		MOVE_SIX = -10,
	//		MOVE_SEVEN = -8,
	//		MOVE_EIGHT = -9,
	//	}
	
	//	public LevelOneLegalMovesClass ()
	//	{
	//	}
	
	public override MoveClass[] getMoves () {
		MoveClass[] moves = new MoveClass[8];
		moves [0] = new MoveClass (1);
		moves [1] = new MoveClass (10);
		moves [2] = new MoveClass (8);
		moves [3] = new MoveClass (9);
		moves [4] = new MoveClass (-1);
		moves [5] = new MoveClass (-10);
		moves [6] = new MoveClass (-8);
		moves [7] = new MoveClass (-9);
		return moves;
	}

	public override int getMove (int i) {
		return getMoves ()[i].getValue ();
	}
	
	public override int getBufferValue ()
	{
		return 2;
	}
	
	/**
	 * +9,+18 --> M4,M2
	 * -1,-2  --> M7,M5
	 * -9,-18 --> M8,M6
	 * +1,+2  --> M3,M1
	 */
	public override List<List<MoveClass>> getBlockablePathsOfMoves () {
		List<List<MoveClass>> moves = new List<List<MoveClass>>();
		MoveClass[] myMoves = getMoves ();
		
		for(int i = 0; i < 4; i++){
			moves.Add(new List<MoveClass>());
			switch(i){
			case 0:
				moves[i].Add(myMoves[3]);
				moves[i].Add(myMoves[1]);
				break;
			case 1:
				moves[i].Add(myMoves[6]);
				moves[i].Add(myMoves[4]);
				break;
			case 2:
				moves[i].Add(myMoves[7]);
				moves[i].Add(myMoves[5]);
				break;
			case 3:
				moves[i].Add(myMoves[2]);
				moves[i].Add(myMoves[0]);
				break;
			default:
				break;
			}
		}
		return moves;
	}
}

